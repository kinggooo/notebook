##sentinel实例之间的通讯端口
2.     ##redis-0
3.     port 26379
4.     ##sentinel需要监控的master信息：<mastername> <masterIP> <masterPort> <quorum>
5.     ##<quorum>应该小于集群中slave的个数,只有当至少<quorum>个sentinel实例提交"master失效"
6.     ##才会认为master为O_DWON("客观"失效)
7.     sentinel monitor def_master 127.0.0.1 6379 2
8.
9.     sentinel auth-pass def_master 012_345^678-90
10.
11.   ##master被当前sentinel实例认定为“失效”的间隔时间
12.   ##如果当前sentinel与master直接的通讯中，在指定时间内没有响应或者响应错误代码，那么
13.   ##当前sentinel就认为master失效(SDOWN，“主观”失效)
14.   ##<mastername> <millseconds>
15.   ##默认为30秒
16.   sentinel down-after-milliseconds def_master 30000
17.
18.   ##当前sentinel实例是否允许实施“failover”(故障转移)
19.   ##no表示当前sentinel为“观察者”(只参与"投票".不参与实施failover)，
20.   ##全局中至少有一个为yes
21.   sentinel can-failover def_master yes
22.
23.   ##当新master产生时，同时进行“slaveof”到新master并进行“SYNC”的slave个数。
24.   ##默认为1,建议保持默认值
25.   ##在salve执行salveof与同步时，将会终止客户端请求。
26.   ##此值较大，意味着“集群”终止客户端请求的时间总和和较大。
27.   ##此值较小,意味着“集群”在故障转移期间，多个salve向客户端提供服务时仍然使用旧数据。
28.   sentinel parallel-syncs def_master 1
29.
30.   ##failover过期时间，当failover开始后，在此时间内仍然没有触发任何failover操作，
31.   ##当前sentinel将会认为此次failoer失败。
32.   sentinel failover-timeout def_master 900000
33.
34.   ##当failover时，可以指定一个“通知”脚本用来告知系统管理员，当前集群的情况。
35.   ##脚本被允许执行的最大时间为60秒，如果超时，脚本将会被终止(KILL)
36.   ##脚本执行的结果：
37.   ## 1    -> 稍后重试，最大重试次数为10;
38.   ## 2    -> 执行结束，无需重试
39.   ##sentinel notification-script mymaster /var/redis/notify.sh
40.
41.   ##failover之后重配置客户端，执行脚本时会传递大量参数，请参考相关文档
# sentinel client-reconfig-script <master-name> <script-path>